[include]
    path = ~/.gitconfig.local
[core]
    editor = vim
    excludesfile = ~/.gitignore
    autocrlf = input
[color]
    diff = always
    status = auto
    branch = auto
    ui = true
    pager = true
[credential]
    helper = osxkeychain
[branch]
    sort = -committerdate
[diff]
    algorithm = histogram
    colorMoved = plain
    mnemonicPrefix = true
    renames = true
[push]
    autoSetupRemote = true
[pull]
    rebase = false
[alias]
    # status
    s = status
    ss = status -s

    # commit
    aa = add .
    al = !git add $(git ls-files --modified --others --exclude-standard | fzf -m --height=60% --preview 'echo {} | xargs git diff')
    cm = commit -m
    ca = commit --amend
    acm = !git aa && git cm
    aca = !git aa && git ca

    # push
    pu = "!f() { git push $1 $(git b l); }; f"

    # diff
    dl = !git diff --color-words $(git ls-files --modified --others --exclude-standard | fzf -m --height=60%)

    # branch
    b = !$HOME/.dotfiles/bin/git-fzf-branch
    co = !$HOME/.dotfiles/bin/git-fzf-checkout
    m = !$HOME/.dotfiles/bin/git-fzf-merge
    ups = git branch --show-current
    ups = "!f() { branch=$(git branch --show-current); git branch --set-upstream-to=origin/$branch $branch; }; f"

    # reset
    r = reset
    rh = reset --hard
    rha = !git aa && git rh

    # revert
    rv = revert
    rvm = revert -m 1

    # stash
    stp = stash push
    stpm = stash push -m
    stpp = stash pop
    stl = !$HOME/.dotfiles/bin/git-fzf-stash-list
    sta = !$HOME/.dotfiles/bin/git-fzf-stash apply
    std = !$HOME/.dotfiles/bin/git-fzf-stash drop
    recent = "!f() { script -q /dev/null git for-each-ref --sort=-committerdate refs/heads/ --format='%(HEAD)%(color:yellow)%(refname:short)%(color:reset)|%(authordate:short)|%(color:red)%(objectname:short)%(color:reset)|%(subject) by %(color:blue)%(authorname)%(color:reset) (%(color:green)%(committerdate:relative)%(color:reset))'|column -ts'|'|head -5; }; f"

    # Open a remote branch in a browser
    open = !git remote -v | awk '/origin.*push/ {print $2}' | xargs open

    # log
    out = "log @{u}.."
